<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>XCode introduction</title>
    <url>/archives/a084818e.html</url>
    <content><![CDATA[<p>XCode 作为 iOS 开发的主力编辑器，是我们在学习 iOS 开发过程中必须熟悉掌握的。这篇文章我们将要简单介绍一些 XCode 的功能。<span id="more"></span></p>
<h1 id="XCode-Overview"><a href="#XCode-Overview" class="headerlink" title="XCode Overview"></a>XCode Overview</h1><h2 id="1-主界面"><a href="#1-主界面" class="headerlink" title="1.  主界面"></a>1.  主界面</h2><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7srpm0exj21670u0jtt.jpg" style="zoom:50%;" />

<h3 id="1-1-Navigator-Area"><a href="#1-1-Navigator-Area" class="headerlink" title="1.1 Navigator Area"></a>1.1 Navigator Area</h3><ul>
<li><p>文件导航栏：</p>
<p>创建文件和文件夹，编辑文件，创建 group 管理文件。</p>
<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7tpij40gj20ec0li0vq.jpg" style="zoom:50%;" /></li>
<li><p>搜索栏：</p>
<p>搜索整个项目文件中特定的属性、方法、变量等，支持正则表达式。快捷键<strong>cmd+shift+F</strong>。</p>
<img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7tseoprfj20em0ecdhj.jpg" style="zoom:50%;" /></li>
<li><p>问题显示栏：</p>
</li>
</ul>
<p>  显示项目编译运行过程中的 warning或 error 信息。</p>
<pre><code>&lt;img src=&quot;https://tva1.sinaimg.cn/large/e6c9d24egy1go7txemhmzj20f00bk0tv.jpg&quot; style=&quot;zoom:50%;&quot; /&gt;
</code></pre>
<h3 id="1-2-实用工具栏"><a href="#1-2-实用工具栏" class="headerlink" title="1.2 实用工具栏"></a>1.2 实用工具栏</h3><p>主界面右侧的Utility Area是用来展示代码文件、ui界面等的详细信息的。</p>
<ul>
<li><p>File Inspector: </p>
<p>  File Inspector 是在 Utility Area 中用来展示在 File navigator中选择的文件的具体信息，例如文件存储的具体位置等。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7vpiqnqzj30ji0ksq3k.jpg" style="zoom:50%;" /></li>
<li><p>Quick Help Inspector:</p>
<p>  Quickk Help Inspector 展示鼠标指针所在的方法、类等的具体文档的。</p>
<p>  同时如果文档中没有信息的，我们可以自己通过注释的方式建立文档。具体操作方法是在某段代码的前一行使用**///**进行注释。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7vv7de9rj32a80jygnd.jpg" style="zoom:50%;" /></li>
<li><p>Attributes Inspector and Size Inspector</p>
<p>  只有在 Storyboard 中选择 UI 元素时才会出现，主要用来定制 ui 元素。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7vxrrpn3j30k60pm3zg.jpg" style="zoom:50%;" /></li>
</ul>
<img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7vy29mvlj30js0n8dgk.jpg" style="zoom:50%;" />



<h3 id="1-3-Editor-Area"><a href="#1-3-Editor-Area" class="headerlink" title="1.3 Editor Area"></a>1.3 Editor Area</h3><ul>
<li><p>Jump Bar：</p>
<p>  可以使用编辑区上方的jump bar 进行文件跳转并且在某个文件内部使用 jump bar 可以跳转到某个具体的方法等。</p>
  <img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7u9linpuj20p40ecq5d.jpg" style="zoom:50%;" /></li>
<li><p>跳转到定义：</p>
<p>  按住<strong>Command</strong>键点击某个类的名字，可以快速跳转到定义该类的文件。</p>
  <img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7udkhvu2j20g20f60ta.jpg" style="zoom:50%;" /></li>
<li><p>配置项目属性：</p>
<p>  单击导航栏上的根项目在编辑区会出现配置项目属性的选项。</p>
<p>  在这里可以配置项目的各种属性，例如：</p>
<ul>
<li>app 名字</li>
<li>bundle identifier (app 的独有 id)</li>
</ul>
</li>
<li><p>设置 app 版本</p>
<ul>
<li>添加额外的框架或库文件</li>
</ul>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7urt2uxwj315s0u0jzi.jpg" style="zoom: 50%;" /></li>
<li><p>注释：</p>
<p>  选择某一个方法或者变量名，使用快捷键<strong>Command+option+/<strong>可以在前一行生成一行注释，以///开头，可以添加描述以及参数说明。写好注释后按住</strong>option</strong>键鼠标指针会变成问号，点击变量或者方法名会弹出注释说明。</p>
<p>  使用<strong>MARK</strong>, <strong>FIXME</strong>, <strong>TODO</strong>注释和组织代码。</p>
<ul>
<li>MARK 用来在一段代码开头进行说明。</li>
<li>TODO 用来指示未来的工作。</li>
<li>FIXME 用来说明需要在代码的什么地方进行修改。</li>
</ul>
<p>  他们都可以在 jump bar 和 minimap 上显示出来便于快速跳转。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7wrda6hbj30ro10on0t.jpg" style="zoom:50%;" /></li>
</ul>
<h2 id="2-调试"><a href="#2-调试" class="headerlink" title="2.  调试"></a>2.  调试</h2><h3 id="2-1-Crashes-Exception-和-Runtime-Issues-定位"><a href="#2-1-Crashes-Exception-和-Runtime-Issues-定位" class="headerlink" title="2.1 Crashes, Exception 和 Runtime Issues 定位"></a>2.1 Crashes, Exception 和 Runtime Issues 定位</h3><ul>
<li>当 crash 停在 main 函数或者高亮出<strong>AppDelegate</strong>时通常是 Objective-C exception.</li>
<li>当 crash 停在 main 函数或者高亮出<strong>AppDelegate</strong>并且有类似<u>“Thread 8: EXC_BAD_INSTRUCTION (code=…)”</u>信息时通常是 runtime issue.</li>
</ul>
<h3 id="2-2-检查系统资源过载"><a href="#2-2-检查系统资源过载" class="headerlink" title="2.2  检查系统资源过载"></a>2.2  检查系统资源过载</h3><p>在 Xcode 中提供了程序运行时的系统资源监控图标，用来监控 CPU、Memory 使用率以及磁盘、网络的 I/O速度。</p>
<img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7zit9on1j30hs0cqweq.jpg" style="zoom:50%;" />

<h3 id="2-3-设置断点"><a href="#2-3-设置断点" class="headerlink" title="2.3 设置断点"></a>2.3 设置断点</h3><ul>
<li><p>断点：</p>
<p>  单击代码区的行数会出现一个明亮的蓝色箭头，表示在该处设置了断点，再单击一下该箭头颜色会变暗，表示暂时在此处停止设置断点，再次单击恢复。如果想删除断点，按住该箭头并进行拖拽就会消失。同时左侧导航栏也可以显示所有设置的断点。</p>
  <img src="https://tva1.sinaimg.cn/large/e6c9d24egy1go7ulyptmdj217m0he0w9.jpg" style="zoom:50%;" />

<ul>
<li>选择<strong>Automatically continue after evaluating actions</strong>可以在不用暂停的情况下输出调试信息。</li>
</ul>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go7z3tzj99j30ti0d4dgs.jpg" style="zoom:50%;" />

<p>  我们也可以设置条件来让断点只在某些特定条件下触发：</p>
<ul>
<li><p>如果一个 bug 只在循环了一定遍数之后才会出现，我们可以通过编辑断点设置触发断点的循环遍数。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go8078kow1j311s0dut9f.jpg" style="zoom:50%;" /></li>
<li><p>如果一个 bug 只在某些条件下才会触发，我们也可以通过编辑断点设置特定条件：</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1go808kpff2j311s0duwfc.jpg" style="zoom:50%;" /></li>
</ul>
<p>  在调试某些问题时，需要在源代码没有定义的符号处暂停，因此需要在断点栏出点击左下角的加号(➕) 来选择<strong>Symbolic Breakpoint</strong>。</p>
<h3 id="2-4-Runtime-Issue"><a href="#2-4-Runtime-Issue" class="headerlink" title="2.4 Runtime Issue:"></a>2.4 Runtime Issue:</h3><p>  一些 Runtime Issue例如在主线程之外更新界面或者不安全地在不同线程更新变量的值等，可以在断点栏左下角添加<strong>Runtime Issue Breakpoint</strong>来检查，同时在设置里开启<strong>Address santizers</strong>来检查断点类型。</p>
<h4 id="2-4-1-Address-santizers"><a href="#2-4-1-Address-santizers" class="headerlink" title="2.4.1   Address santizers"></a>2.4.1   <strong>Address santizers</strong></h4><p>  <strong>Address santizers</strong>是基于LLVM的适用Objective-C和Swift用于发现内存使用问题的工具。</p>
<ul>
<li><p>原理：启用Address Sanitizer后，会在APP中增加<code>libclang_rt.asan_ios_dynamic.dylib</code>，它将在运行时加载。Address Sanitizer替换了malloc和free的实现。当调用malloc函数时，它将分配指定大小的内存A，并将内存A周围的区域标记为”off-limits“。当free方法被调用时，内存A也被标记为”off-limits“，同时内存A被添加到隔离队列，这个操作将导致内存A无法再被重新malloc使用。当访问到被标记为”off-limits“的内存时，Address Sanitizer就会报告异常。</p>
</li>
<li><p>Address santizers可以用来检测内存使用错误如下：</p>
<ul>
<li><p>内存释放后又被使用</p>
</li>
<li><p>内存重复释放</p>
</li>
<li><p>释放未申请的内存</p>
</li>
<li><p>使用栈内存作为函数返回值</p>
</li>
<li><p>使用了超出作用域的栈内存</p>
</li>
<li><p>内存越界访问</p>
</li>
</ul>
</li>
<li><p>开启方法如下：</p>
<p>  在Product的选项中选择Scheme以及Edit Scheme</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1goca0at896j31z90u04au.jpg" style="zoom:50%;" /></li>
<li><p>使用限制：</p>
<ol>
<li><p>Address Santizers只有在代码运行阶段才能检测出内存使用错误，运行过程中无法保证代码所有的分支和逻辑都能执行，因此检测不全面。</p>
</li>
<li><p>Address Sanitizer不能检测内存泄露，访问未初始化的内存或整形溢出。</p>
</li>
</ol>
</li>
<li><p>性能影响：</p>
<p>  开启Address Sanitizer，将使代码执行效率降低2-5倍，内存使用增加2-3倍。可以通过设置<code>-O1</code>优化级别来提高内存利用率。</p>
</li>
</ul>
</li>
</ul>
<h2 id="3-Xcode快捷键"><a href="#3-Xcode快捷键" class="headerlink" title="3. Xcode快捷键"></a>3. Xcode快捷键</h2><p>熟练使用Xcode快捷键对于我们熟悉Xcode也十分重要，并且可以提高我们使用Xcode编程效率。</p>
<h3 id="3-1-常用快捷键介绍"><a href="#3-1-常用快捷键介绍" class="headerlink" title="3.1 常用快捷键介绍"></a>3.1 常用快捷键介绍</h3><p><strong>1. 文件操作相关的快捷键</strong></p>
<ol>
<li>command + n 新建文件(new file)</li>
<li>command + shift + n 新建工程(new project)</li>
<li>command + o 打开工程(open project)</li>
<li>command + shift + o 快速打开工程中的文件(open quickly)，类似于Spotlight的功能</li>
<li>option + command + a 向工程中添加文件(add file to project)</li>
<li>alt + command + w 关闭当前工程(close project) 和command + w的效果一样</li>
</ol>
<p><strong>2. 窗口导航快捷键</strong></p>
<ol>
<li>command + 0 切换左侧导航窗口的显示隐藏(hide/show Navigator)</li>
<li>command + option + 0 切换右侧功能面板(hide/show Utilities)</li>
<li>command + shift + y 切换底部调试区域(hide/show Debug area)</li>
<li>command + 1 ~ 8 在工程导航窗口的8个tab间切换</li>
<li>command + option + 1 ~ 4 在右侧功能面板的4个tab间切换</li>
</ol>
<p><strong>3. 代码编辑器里的快捷键</strong></p>
<ol>
<li>command + → 移动到一行末尾</li>
<li>command + delete 删除一行代码，和上一个快捷键组合使用</li>
<li>command + [ 或 ] 向前或向后调整代码缩进</li>
<li>control + i 根据当前行代码所在位置自动调整缩进（可以先command + a全选然后调整所有代码的缩进）</li>
<li>command + option + [ 或 ] 将代码上下移动一行</li>
<li>control + command + ↑ 或 ↓ 在.m/.c/.cpp 文件和头文件.h之间切换</li>
<li>esc 可以弹出对应的代码提示</li>
<li>control + command + e 重构变量名，将光标放在变量名上或者双击选中这个变量，然后按该快捷键，就可以实现当前文件下所有用到该变量的地方进行修改</li>
<li>command + \ 添加或者移除断点</li>
<li>command + y 切换当前所有的断点的激活状态</li>
</ol>
<p><strong>4. storyboard中的快捷键</strong></p>
<ol>
<li>option + command + enter 切换到Assitant editor</li>
<li>command + enter 从Assitant editor切换回storyboard编辑器界面</li>
<li>command + -(减号键) 缩小storyboard界面</li>
<li>command + shift + =(等号键) 放大storyboard界面，双击ViewControllerScene也可以将其缩放到合适的大小</li>
<li>command + = 在选中控件的情况下按该快捷键会根据控件中的内容(如UILabel、UIButton中的文本)自动调整控件的大小</li>
<li>command + option + = 同样是选中控件的情况下，可以根据控件的约束更新位置(update frame)</li>
<li>另外在storyboard界面通过command + shift + o 搜索到对应的文件后，按住option键双击或者按回车这个文件可以以Assitant Editor的形式在右侧打开该文件</li>
</ol>
<p><strong>5. Debug相关快捷键</strong></p>
<ol>
<li>command + r 编译并运行当前工程</li>
<li>command + b 仅编译工程</li>
<li>command + . 结束运行中的工程或者取消编译中的工程</li>
<li>F6 从断点处执行下一行代码(stepOver)</li>
<li>F7 跳到当前的函数内部调试(stepInto)</li>
<li>F8 从当前函数中返回(stepOut)</li>
</ol>
<h3 id="3-2-Xcode快捷键相关资料"><a href="#3-2-Xcode快捷键相关资料" class="headerlink" title="3.2 Xcode快捷键相关资料"></a>3.2 Xcode快捷键相关资料</h3><ul>
<li><p><a href="https://developer.apple.com/library/archive/documentation/IDEs/Conceptual/xcode_help-command_shortcuts/Introduction/Introduction.html#//apple_ref/doc/uid/TP40010560-CH1-SW1">官方文档</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/419f2dddd58b">五分钟深度记忆你的Xcode快捷键</a></p>
</li>
<li><p>为了更便捷地记忆使用快捷键，可以下载安装<a href="https://www.mediaatelier.com/CheatSheet/CheatSheet_1.6.zip">cheat sheet</a> 并在Xcode界面按住<strong>command</strong>键几秒钟，就会自动弹出如下图所示所有XCode的快捷键。</p>
  <img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gocb2hwyimj31ev0u04ee.jpg" style="zoom:50%;" /></li>
</ul>
<h2 id="4-切换Xcode版本"><a href="#4-切换Xcode版本" class="headerlink" title="4. 切换Xcode版本"></a>4. 切换Xcode版本</h2><ol>
<li>显示当前使用的Xcode：<code>xcode-select -p</code></li>
<li>切换Xcode版本：<code>sudo xcode-select -s /Applications/Xcode10.2/Xcode.app/Contents/Developer</code> 后面为要切换Xcode版本的路径</li>
<li>查看当前版本：<code>gcc --version</code></li>
</ol>
<h2 id="Xcode官方文档和参考资料"><a href="#Xcode官方文档和参考资料" class="headerlink" title=". Xcode官方文档和参考资料"></a>. Xcode官方文档和参考资料</h2><p>以上只是一个关于Xcode的粗略的介绍，如果想要更详细地了解Xcode，请阅读Xcode的官方文档。</p>
<ul>
<li><p><a href="https://developer.apple.com/documentation/xcode?language=objc">https://developer.apple.com/documentation/xcode?language=objc</a></p>
</li>
<li><p><a href="https://help.apple.com/xcode/mac/11.0/index.html?localePath=en.lproj#/devc8c2a6be1">https://help.apple.com/xcode/mac/11.0/index.html?localePath=en.lproj#/devc8c2a6be1</a></p>
</li>
<li><p><a href="https://developer.apple.com/library/archive/navigation/#section=Topics&amp;topic=Xcode">https://developer.apple.com/library/archive/navigation/#section=Topics&amp;topic=Xcode</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>XCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/archives/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
